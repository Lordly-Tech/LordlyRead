<template>
  <div class="page {{pageClass}}" @swipe="pageSwipe">
    <div class="topbar">
      <div class="topbar-btn" @click="back">
        <image src="/common/icon/back.png" class="icon" />
      </div>
      <text class="title">详情</text>
      <div class="topbar-btn" @click="toggleMenu">
        <image src="/common/icon/menu.png" class="icon" />
      </div>
    </div>
    <div class="body">
      <scroll class="body-container center" id="body" style="height: {{bodyHeight}}px" scroll-y="true" bounces="true">
        <image src="{{book.coverUrl}}" alt="/common/image/bookcover.png" class="book-cover" @click="toggleImgMenu" />
        <text class="book-name">{{ book.name }}</text>
        <scroll if="{{book.kind.length > 0}}" class="tags" scroll-x="true" bounces="true">
          <div class="grow justify-center">
            <text for="tag in book.kind" class="tag">{{ tag }}</text>
          </div>
        </scroll>
        <div class="center w-100">
          <image src="/common/icon/author.png" class="icon" />
          <text class="item-text ellipsis">{{ book.author ?? "未知" }}</text>
        </div>
        <div class="center w-100" @click="wait">
          <image src="/common/icon/source.png" class="icon" />
          <text class="item-text ellipsis">{{ book.bookSourceName ?? "未知" }}</text>
          <div class="badge-btn">
            <text class="badge">换源</text>
          </div>
        </div>
        <div class="center w-100">
          <image src="/common/icon/latest.png" class="icon" />
          <text class="item-text ellipsis">{{ book.lastChapter ?? "未知" }}</text>
        </div>
        <div class="center w-100" @click="toCatalog">
          <image src="/common/icon/catalog.png" class="icon" />
          <text class="item-text ellipsis">{{ book.progress ?? "目录加载中……" }}</text>
          <div class="badge-btn">
            <text class="badge">目录</text>
          </div>
        </div>
        <div class="intro col">
          <text for="text in book.intro.split('\n')" class="intro-text">{{ text }}</text>
        </div>
        <div class="card w-100 justify-center" @click="toContent">
          <text class="card-btn-text">开始阅读</text>
        </div>
        <div class="card w-100 justify-center" @click="addOrRemove">
          <text class="card-btn-text">{{ book.inBookShelf ? "删除书籍" : "加入书架" }}</text>
        </div>
      </scroll>
      <div class="menu pa-md {{ menu }}">
        <div class="card" @click="load(true)">
          <image src="/common/icon/refresh.png" class="icon" />
          <text class="card-btn-text center">刷新</text>
        </div>
        <div class="card" @click="wait">
          <image src="/common/icon/book-code.png" class="icon" />
          <text class="card-btn-text center">设置书籍变量</text>
        </div>
        <div class="card" @click="wait">
          <image src="/common/icon/code.png" class="icon" />
          <text class="card-btn-text center">设置源变量</text>
        </div>
        <div class="card" @click="wait">
          <image src="/common/icon/trash.png" class="icon" />
          <text class="card-btn-text center">清理缓存</text>
        </div>
        <div class="card" @click="wait">
          <image src="/common/icon/check.png" class="icon" />
          <text class="card-btn-text center">启用更新</text>
        </div>
      </div>
      <div class="menu center {{ imgMenu }}">
        <image src="{{book.coverUrl}}" alt="/common/image/bookcover.png" class="book-cover full-cover" />
      </div>
    </div>
    <div class="cover-animation-helper {{coverAnimation}}"></div>
  </div>
</template>

<script>
const {template, router, source, book} = global

let thisBook

export default {
  ...template,
  private: {
    ...template.private,
    book: {
      name: undefined,
      author: undefined,
      bookUrl: undefined,
      bookSourceName: undefined,
      bookSourceUrl: undefined,
      coverUrl: undefined,
      kind: [""],
      lastChapter: undefined,
      intro: undefined,
      wordCount: undefined,
      progress: undefined,
      inBookShelf: undefined
    },
    menu: "",
    imgMenu: "",
    pre: ""
  },
  ...router,
  onReady() {
    try {
      const pre = JSON.parse(this.pre)
      console.log(pre)
      this.book.name = pre.name
      this.book.author = pre.author
      this.book.bookUrl = pre.bookUrl
      this.book.bookSourceUrl = pre.bookSourceUrl
      this.book.kind = pre.kind
      this.book.lastChapter = pre.lastChapter
      this.book.intro = pre.intro
      this.book.coverUrl = pre.coverUrl
      this.book.wordCount = pre.wordCount
      this.book.progress = pre.toc.length > 0 ? pre.toc[pre.progress].chapterName : undefined
      this.book.bookSourceName = source.getSource(pre.bookSourceUrl).bookSourceName
      this.load()
    } catch (e) {
      this.toast("参数错误")
      this.back()
    }
  },
  onBack() {
    if (this.imgMenu === "animation-in") {
      this.toggleImgMenu()
      return true
    }
    if (this.menu === "animation-in") {
      this.toggleMenu()
      return true
    }
  },
  toggleMenu() {
    if (this.imgMenu === "animation-in") {
      this.toggleImgMenu()
    }
    if (this.menu === "animation-in") {
      this.menu = "animation-out-back"
    } else {
      this.menu = "animation-in"
    }
  },
  toggleImgMenu() {
    if (this.imgMenu === "animation-in") {
      this.imgMenu = "animation-out-back"
    } else {
      this.imgMenu = "animation-in"
    }
  },
  load(isRefresh) {
    if (isRefresh) this.back()
    if (!isRefresh) thisBook = book.getBook(this.book.bookSourceUrl, this.book.bookUrl)
    if (thisBook && !isRefresh) {
      this.book.inBookShelf = true
      this.book.progress = thisBook.toc[thisBook.progress].chapterName
      this.book.name = thisBook.name
      this.book.author = thisBook.author
      this.book.bookUrl = thisBook.bookUrl
      this.book.bookSourceUrl = thisBook.bookSourceUrl
      this.book.kind = thisBook.kind
      this.book.lastChapter = thisBook.lastChapter
      this.book.intro = thisBook.intro
      this.book.coverUrl = thisBook.coverUrl
      this.book.wordCount = thisBook.wordCount
    } else {
      source
        .getSource(this.book.bookSourceUrl)
        .detail({
          bookSourceUrl: this.book.bookSourceUrl,
          bookUrl: this.book.bookUrl,
          name: this.book.name,
          author: this.book.author,
          coverUrl: this.book.coverUrl,
          kind: this.book.kind,
          lastChapter: this.book.lastChapter,
          intro: this.book.intro,
          wordCount: this.book.wordCount
        })
        .then(async (data) => {
          if (thisBook) thisBook.update(data)
          else thisBook = data
          this.book.name = data.name
          this.book.author = data.author
          this.book.bookUrl = data.bookUrl
          this.book.bookSourceUrl = data.bookSourceUrl
          this.book.kind = data.kind
          this.book.lastChapter = data.lastChapter
          this.book.intro = data.intro
          this.book.coverUrl = data.coverUrl
          this.book.wordCount = data.wordCount
          try {
            thisBook.update(await source.getSource(this.book.bookSourceUrl).loadToc(thisBook))

            this.book.progress ??= thisBook.toc[thisBook.progress].chapterName
            if (isRefresh === true) {
              this.toast("刷新成功")
            }
          } catch (e) {
            this.toast("目录加载失败")
          }
        })
        .catch((e) => {
          this.toast(e)
        })
    }
  },
  toCatalog() {
    if (!thisBook.toc) {
      this.toast("目录加载中")
      return
    }
    this.push("/pages/catalog", [["bookData", thisBook]])
  },
  addOrRemove() {
    if (this.book.inBookShelf) {
      book.remove(thisBook)
      this.book.inBookShelf = !this.book.inBookShelf
    } else {
      book.add(thisBook)
      this.book.inBookShelf = !this.book.inBookShelf
    }
  },
  toContent() {
    this.push("/pages/content", [["bookData", thisBook], ["chapterIndex", thisBook.progress]])
  }
}
</script>

<style>
@import url(../../common/css/page.css);

.book-cover {
  width: 120px;
  height: 180px;
  margin: 20px;
  border-radius: 8px;
  box-shadow: 0 0 48px white;
}

.full-cover {
  width: 200px;
  height: 300px;
}

.book-name {
  font-size: 24px;
  font-weight: bold;
  text-align: center;
}

.tags {
  width: 100%;
  padding: 16px 0;
}

.tag {
  font-size: 16px;
  font-weight: bold;
  padding: 4px 8px;
  margin: 0 8px;
  border-radius: 8px;
  background-color: #333;
}

.item-text {
  height: 24px;
  line-height: 24px;
  font-size: 20px;
  font-weight: bold;
  margin-left: 16px;
  padding: 8px 0;
  flex-grow: 1;
}

.intro {
  padding: 16px 0;
}

.intro-text {
  font-size: 20px;
  font-weight: bold;
  margin-bottom: 16px;
}
</style>