<template>
  <div class="page {{pageClass}}" @swipe="pageSwipe">
    <div class="topbar">
      <div class="topbar-btn" @click="back">
        <image src="/common/icon/back.png" class="icon" />
      </div>
      <text class="title">搜索</text>
      <div class="topbar-btn" @click="toggleMenu">
        <image src="/common/icon/menu.png" class="icon" />
      </div>
    </div>
    <div class="body">
      <scroll class="body-container" id="body" style="height: {{bodyHeight}}px" scroll-y="true" bounces="true">
        <block for="item in list">
          <div class="card" @click="toDetail(item)">
            <image src="{{ item.coverUrl }}" alt="/common/image/bookcover.png" class="book-cover" />
            <div class="col grow">
              <marquee class="book-name" scrollamount="48" text-offset="16">
                {{ item.name }}
              </marquee>
              <marquee class="book-hint" scrollamount="48" text-offset="16">
                作者：{{ item.author ?? "未知" }}
              </marquee>
              <marquee class="book-hint" scrollamount="48" text-offset="16">
                {{ item.kind.join(" / ") }}
              </marquee>
            </div>
          </div>
        </block>
        <div class="card justify-center" @click="nextPage">
          <text class="card-btn-text">第{{ page }}页 | 下一页</text>
        </div>
      </scroll>
      <div class="menu pa-md {{ menu }}">
        <div class="card" @click="refresh">
          <image src="/common/icon/refresh.png" class="icon" />
          <text class="card-btn-text center">刷新</text>
        </div>
        <div class="card" @click="push('/pages/source')">
          <image src="/common/icon/library.png" class="icon" />
          <text class="card-btn-text center">书源管理</text>
        </div>
      </div>
    </div>
    <div class="cover-animation-helper {{coverAnimation}}"></div>
  </div>
</template>

<script>
const {template, router, source} = global

export default {
  ...template,
  private: {
    ...template.private,
    keyword: "",
    menu: "",
    page: 1,
    list: []
  },
  ...router,

  onReady() {
    if (!this.keyword) {
      this.toast("请输入关键词")
      this.back()
      return
    }
    this.nextPage()
  },
  onBack() {
    if (this.menu === "animation-in") {
      this.toggleMenu()
      return true
    }
  },
  toggleMenu() {
    if (this.menu === "animation-in") {
      this.menu = "animation-out-back"
    } else {
      this.menu = "animation-in"
    }
  },
  toDetail(item) {
    this.push("/pages/detail", [["pre", item]])
  },
  refresh() {
    this.list = []
    this.page = 1
    this.nextPage()
    this.back()
  },
  nextPage() {
    Promise.all(
      source.list
        .filter((item) => item.enabled)
        .map((item) => {
          return item
            .search(this.keyword, this.page)
            .then((res) => {
              this.list.push(...res)
            })
            .catch((err) => {
              this.toast(err)
            })
        })
    ).then(() => {
      console.log(this.list)
      this.page++
    })
  }
}
</script>

<style>
@import url(../../common/css/page.css);
</style>